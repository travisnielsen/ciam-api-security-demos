@startuml Connected Kitchen

!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Container.puml

!define AzurePuml https://raw.githubusercontent.com/RicardoNiepel/Azure-PlantUML/master/dist
!define LocalServices /img
!includeurl AzurePuml/AzureCommon.puml
!includeurl AzurePuml/Compute/AzureFunction.puml
!includeurl AzurePuml/Analytics/AzureStreamAnalytics.puml
!includeurl AzurePuml/Analytics/AzureEventHub.puml
!includeurl AzurePuml/Containers/AzureContainerRegistry.puml
!includeurl AzurePuml/Databases/AzureCosmosDb.puml
!includeurl AzurePuml/Storage/AzureBlobStorage.puml
!includeurl AzurePuml/InternetOfThings/AzureIoTHub.puml
!includeurl AzurePuml/InternetOfThings/AzureIoTEdge.puml
!includeurl AzurePuml/DevOps/all.puml

LAYOUT_LEFT_RIGHT

AzureIoTEdge(iotEdge, "IoT Edge", "Hardware", "Application runtime")
AzureContainerRegistry(acr, "Container Registry", "Private registry for Docker images")
AzureIoTHub(iotHub, "IoT Hub", "Standard S1", "Ingress point for all telemetry, using built-in IoT Hub Routes for routing")
AzureEventHub(eventHubTelemetry, "Device Telemetry", "Standard, 5 TUs, 4 Partitions", "In addition to the built-in 'Receive device-to-cloud messages' from IoT Hub")
AzureFunction(telemetryFunction, "Telemetry Processing", "v1, App Service plan P3v2, C#", "transform it into a different format, e.g. joining external information")
AzureCosmosDb(warmStorageCosmos, "Warm Storage", "2,000 RUs", "for consumption, e.g. display on a dashboard")
AzureStreamAnalytics(streamAnalytics, "Stream Analytics", "6 SUs", "apply complex queries over time periods, tolerates late (up to 21 days) and out-of-order (up to one hour) events")
AzureFunction(alertingFunction, "Alerting", "v2, Consumption plan, JS")

System_Boundary(c1, "Azure DevOps") {
    AzurePipelines(devOpsPipeline, "Release Management", "> 5 users", "Automated CI / CD")
    AzureRepos(sourceCodeRepo, "Code Repository", "> 5 users", "Source code version control")
}

Person(developer, "Developer")

Rel(iotEdge, iotHub, "Send telemetry to")
Rel(iotEdge, acr, "Pulls images from")
Rel(iotHub, iotEdge, "Configure and update modules")
Rel(iotHub, eventHubTelemetry, "Routes all telemetry to")
Rel_Back(eventHubTelemetry, streamAnalytics, "Analyzes each event from")
Rel_Back(eventHubTelemetry, telemetryFunction, "Processes each event from")
Rel(streamAnalytics, alertingFunction, "Triggers for output batches to")
Rel(telemetryFunction, warmStorageCosmos, "Writes all transformed events to")

Rel_Back(iotHub, devOpsPipeline, "Pushes deployment manifests to")
Rel(devOpsPipeline, sourceCodeRepo, "Triggered by updates in")
Rel_Back(acr, devOpsPipeline, "Pushes images to")
Rel_Back(sourceCodeRepo, developer, "saves code to")

@enduml